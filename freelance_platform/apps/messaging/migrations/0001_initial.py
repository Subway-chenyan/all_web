# Generated by Django 5.2.7 on 2025-10-29 10:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_type', models.CharField(choices=[('direct', 'Direct Message'), ('order', 'Order Related'), ('gig_inquiry', 'Gig Inquiry'), ('support', 'Support')], db_index=True, default='direct', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('gig_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_archived_by_participant1', models.BooleanField(db_index=True, default=False)),
                ('is_archived_by_participant2', models.BooleanField(db_index=True, default=False)),
                ('last_message_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('participant1_unread_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('participant2_unread_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_blocked_by_participant1', models.BooleanField(db_index=True, default=False)),
                ('is_blocked_by_participant2', models.BooleanField(db_index=True, default=False)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='orders.order')),
                ('participant1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_participant1', to=settings.AUTH_USER_MODEL)),
                ('participant2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_participant2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_conversation',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('audio', 'Audio'), ('video', 'Video'), ('system', 'System'), ('order_update', 'Order Update'), ('gig_recommendation', 'Gig Recommendation')], db_index=True, default='text', max_length=20)),
                ('content', models.TextField(blank=True)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted_by_sender', models.BooleanField(db_index=True, default=False)),
                ('is_deleted_by_recipient', models.BooleanField(db_index=True, default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='messaging.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_message',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='last_message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_message_in_conversations', to='messaging.message'),
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='message_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('mime_type', models.CharField(max_length=100)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_attachments', to='messaging.message')),
            ],
            options={
                'db_table': 'messaging_message_attachment',
            },
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reaction_type', models.CharField(choices=[('like', 'üëç'), ('love', '‚ù§Ô∏è'), ('laugh', 'üòÑ'), ('wow', 'üòÆ'), ('sad', 'üò¢'), ('angry', 'üò†')], db_index=True, max_length=20)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_message_reaction',
            },
        ),
        migrations.CreateModel(
            name='MessageReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('harassment', 'Harassment'), ('inappropriate', 'Inappropriate Content'), ('fraud', 'Fraud'), ('threat', 'Threat'), ('other', 'Other')], db_index=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], db_index=True, default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='messaging.message')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_messages', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_message_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_message_report',
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('template_type', models.CharField(choices=[('greeting', 'Greeting'), ('order_start', 'Order Start'), ('delivery', 'Delivery'), ('revision_request', 'Revision Request'), ('completion', 'Completion'), ('support', 'Support'), ('marketing', 'Marketing')], db_index=True, max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('variables', models.JSONField(blank=True, default=list)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'db_table': 'messaging_message_template',
                'indexes': [models.Index(fields=['template_type'], name='messaging_m_templat_7a7a19_idx'), models.Index(fields=['is_active'], name='messaging_m_is_acti_5ad9ca_idx'), models.Index(fields=['usage_count'], name='messaging_m_usage_c_f401f0_idx')],
            },
        ),
        migrations.CreateModel(
            name='MessagingStat',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('text_messages', models.PositiveIntegerField(default=0)),
                ('image_messages', models.PositiveIntegerField(default=0)),
                ('file_messages', models.PositiveIntegerField(default=0)),
                ('new_conversations', models.PositiveIntegerField(default=0)),
                ('active_conversations', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('message_reports', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'messaging_messaging_stat',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='messaging_m_date_31eacd_idx')],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='BlockedUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by_users', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_blocked_user',
                'indexes': [models.Index(fields=['blocker'], name='messaging_b_blocker_3eed5d_idx'), models.Index(fields=['blocked'], name='messaging_b_blocked_c38be3_idx')],
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.CreateModel(
            name='ConversationTag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag_name', models.CharField(db_index=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='messaging.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_conversation_tag',
                'indexes': [models.Index(fields=['user', 'tag_name'], name='messaging_c_user_id_5d0676_idx'), models.Index(fields=['conversation'], name='messaging_c_convers_22f872_idx')],
                'unique_together': {('user', 'conversation', 'tag_name')},
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messaging_m_convers_7bc91b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender'], name='messaging_m_sender__259b0b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['recipient'], name='messaging_m_recipie_67ca11_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='messaging_m_message_9677d2_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_read'], name='messaging_m_is_read_8b9e91_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['reply_to'], name='messaging_m_reply_t_db4fa3_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='messaging_m_created_d51bc4_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['participant1', 'is_active'], name='messaging_c_partici_9e4114_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['participant2', 'is_active'], name='messaging_c_partici_15b097_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['conversation_type'], name='messaging_c_convers_4ecbe9_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['order'], name='messaging_c_order_i_dfaf52_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['gig_id'], name='messaging_c_gig_id_92fb2e_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='messaging_c_last_me_87f299_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['participant1_unread_count'], name='messaging_c_partici_10f532_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['participant2_unread_count'], name='messaging_c_partici_9e8409_idx'),
        ),
        migrations.AddIndex(
            model_name='messageattachment',
            index=models.Index(fields=['message'], name='messaging_m_message_e844f1_idx'),
        ),
        migrations.AddIndex(
            model_name='messageattachment',
            index=models.Index(fields=['file_type'], name='messaging_m_file_ty_dcd042_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['message', 'reaction_type'], name='messaging_m_message_80b2a9_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['user'], name='messaging_m_user_id_72c01c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereaction',
            unique_together={('message', 'user', 'reaction_type')},
        ),
        migrations.AddIndex(
            model_name='messagereport',
            index=models.Index(fields=['message'], name='messaging_m_message_561a04_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereport',
            index=models.Index(fields=['reporter'], name='messaging_m_reporte_7e23ef_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereport',
            index=models.Index(fields=['reason'], name='messaging_m_reason_a8b8f4_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereport',
            index=models.Index(fields=['status'], name='messaging_m_status_66276b_idx'),
        ),
    ]

# Generated by Django 5.2.7 on 2025-10-29 10:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('freelancer', 'Freelancer'), ('admin', 'Admin')], db_index=True, max_length=20)),
                ('user_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('pending_verification', 'Pending Verification')], db_index=True, default='active', max_length=30)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Chinese mainland mobile number', regex='^1[3-9]\\d{9}$')])),
                ('wechat_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid WeChat ID format', regex='^[a-zA-Z][a-zA-Z0-9_-]{5,19}$')])),
                ('is_email_verified', models.BooleanField(db_index=True, default=False)),
                ('is_phone_verified', models.BooleanField(db_index=True, default=False)),
                ('is_identity_verified', models.BooleanField(db_index=True, default=False)),
                ('profile_completion_percentage', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_login_location', models.CharField(blank=True, max_length=100, null=True)),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('marketing_emails_enabled', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'accounts_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution_name', models.CharField(db_index=True, max_length=200)),
                ('degree', models.CharField(db_index=True, max_length=100)),
                ('field_of_study', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(db_index=True, default=False)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('description', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_education',
                'ordering': ['-is_current', '-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='portfolio/images/')),
                ('file', models.FileField(blank=True, null=True, upload_to='portfolio/files/')),
                ('url', models.URLField(blank=True)),
                ('project_url', models.URLField(blank=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('technologies_used', models.TextField(help_text='Comma-separated list of technologies')),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_portfolio',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(db_index=True, max_length=50)),
            ],
            options={
                'db_table': 'accounts_skill',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='accounts_sk_name_be9603_idx'), models.Index(fields=['category'], name='accounts_sk_categor_ac3af0_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('profile_update', 'Profile Update'), ('gig_created', 'Gig Created'), ('order_created', 'Order Created'), ('payment_made', 'Payment Made'), ('review_given', 'Review Given'), ('password_change', 'Password Change'), ('email_change', 'Email Change')], db_index=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_activity_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(blank=True, max_length=2000)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('country', models.CharField(default='China', max_length=50)),
                ('province', models.CharField(blank=True, choices=[('beijing', 'Beijing'), ('shanghai', 'Shanghai'), ('guangdong', 'Guangdong'), ('zhejiang', 'Zhejiang'), ('jiangsu', 'Jiangsu'), ('sichuan', 'Sichuan'), ('hubei', 'Hubei'), ('hunan', 'Hunan'), ('fujian', 'Fujian'), ('shandong', 'Shandong'), ('henan', 'Henan'), ('anhui', 'Anhui'), ('chongqing', 'Chongqing'), ('tianjin', 'Tianjin'), ('liaoning', 'Liaoning'), ('jilin', 'Jilin'), ('heilongjiang', 'Heilongjiang'), ('shaanxi', 'Shaanxi'), ('shanxi', 'Shanxi'), ('hebei', 'Hebei'), ('xinjiang', 'Xinjiang'), ('tibet', 'Tibet'), ('qinghai', 'Qinghai'), ('gansu', 'Gansu'), ('ningxia', 'Ningxia'), ('yunnan', 'Yunnan'), ('guizhou', 'Guizhou'), ('guangxi', 'Guangxi'), ('hainan', 'Hainan'), ('inner_mongolia', 'Inner Mongolia'), ('taiwan', 'Taiwan'), ('hong_kong', 'Hong Kong'), ('macau', 'Macau')], max_length=50)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('preferred_language', models.CharField(default='zh-hans', max_length=10)),
                ('timezone', models.CharField(default='Asia/Shanghai', max_length=50)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('years_of_experience', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('company_registration_number', models.CharField(blank=True, max_length=100)),
                ('company_website', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('portfolio_url', models.URLField(blank=True)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('unlisted', 'Unlisted')], default='public', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('proficiency_level', models.IntegerField(db_index=True, default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('years_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_users', to='accounts.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_skill',
            },
        ),
        migrations.CreateModel(
            name='UserVerification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identity_document_type', models.CharField(blank=True, choices=[('national_id', 'National ID'), ('passport', 'Passport'), ('driving_license', 'Driving License')], max_length=50)),
                ('identity_document_front', models.ImageField(blank=True, null=True, upload_to='verification/identity/')),
                ('identity_document_back', models.ImageField(blank=True, null=True, upload_to='verification/identity/')),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], db_index=True, default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_verification',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, max_length=200)),
                ('job_title', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(db_index=True, default=False)),
                ('company_location', models.CharField(blank=True, max_length=200)),
                ('skills_used', models.ManyToManyField(blank=True, to='accounts.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_work_experience',
                'ordering': ['-is_current', '-end_date'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type', 'user_status'], name='accounts_us_user_ty_b8f319_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at', 'user_status'], name='accounts_us_created_1240ff_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email', 'user_type'], name='accounts_us_email_1c44cf_idx'),
        ),
        migrations.AddIndex(
            model_name='education',
            index=models.Index(fields=['user', 'is_current'], name='accounts_ed_user_id_7994ca_idx'),
        ),
        migrations.AddIndex(
            model_name='education',
            index=models.Index(fields=['institution_name'], name='accounts_ed_institu_09f4a6_idx'),
        ),
        migrations.AddIndex(
            model_name='education',
            index=models.Index(fields=['degree'], name='accounts_ed_degree_cfb822_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['user', 'is_featured'], name='accounts_po_user_id_a2cae2_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['user', 'is_public'], name='accounts_po_user_id_0a4275_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['title'], name='accounts_po_title_41261f_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user', 'activity_type'], name='accounts_us_user_id_44f066_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['activity_type', 'created_at'], name='accounts_us_activit_faaa13_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['created_at'], name='accounts_us_created_89f314_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user', 'profile_visibility'], name='accounts_us_user_id_77fe6d_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['province', 'city'], name='accounts_us_provinc_6c6675_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['hourly_rate'], name='accounts_us_hourly__60f083_idx'),
        ),
        migrations.AddIndex(
            model_name='userskill',
            index=models.Index(fields=['skill', 'proficiency_level'], name='accounts_us_skill_i_560c85_idx'),
        ),
        migrations.AddIndex(
            model_name='userskill',
            index=models.Index(fields=['user', 'proficiency_level'], name='accounts_us_user_id_864d70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userskill',
            unique_together={('user', 'skill')},
        ),
        migrations.AddIndex(
            model_name='userverification',
            index=models.Index(fields=['verification_status'], name='accounts_us_verific_b84cee_idx'),
        ),
        migrations.AddIndex(
            model_name='userverification',
            index=models.Index(fields=['verified_at'], name='accounts_us_verifie_9cb329_idx'),
        ),
        migrations.AddIndex(
            model_name='workexperience',
            index=models.Index(fields=['user', 'is_current'], name='accounts_wo_user_id_59e7ba_idx'),
        ),
        migrations.AddIndex(
            model_name='workexperience',
            index=models.Index(fields=['company_name'], name='accounts_wo_company_0d23b0_idx'),
        ),
        migrations.AddIndex(
            model_name='workexperience',
            index=models.Index(fields=['job_title'], name='accounts_wo_job_tit_b31764_idx'),
        ),
    ]

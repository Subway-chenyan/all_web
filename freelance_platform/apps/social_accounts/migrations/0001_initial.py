# Generated by Django 5.2.7 on 2025-10-30 06:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('wechat', '微信'), ('qq', 'QQ'), ('wechat_open', '微信开放平台'), ('wechat_union', '微信开放平台UnionID'), ('alipay', '支付宝'), ('weibo', '微博'), ('github', 'GitHub'), ('google', 'Google')], db_index=True, max_length=50, verbose_name='社交平台')),
                ('uid', models.CharField(db_index=True, max_length=255, verbose_name='社交平台用户ID')),
                ('openid', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='OpenID')),
                ('unionid', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='UnionID')),
                ('social_nickname', models.CharField(blank=True, max_length=100, verbose_name='社交昵称')),
                ('social_avatar', models.URLField(blank=True, verbose_name='社交头像')),
                ('social_profile_url', models.URLField(blank=True, verbose_name='社交资料链接')),
                ('last_login_at', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('login_count', models.IntegerField(db_index=True, default=0, verbose_name='登录次数')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='是否活跃')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='是否已验证')),
                ('access_token', models.TextField(blank=True, verbose_name='访问令牌')),
                ('refresh_token', models.TextField(blank=True, verbose_name='刷新令牌')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='令牌过期时间')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='额外数据')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '社交账号',
                'verbose_name_plural': '社交账号',
                'db_table': 'social_accounts_social_account',
            },
        ),
        migrations.CreateModel(
            name='QQUserInfo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=100, verbose_name='QQ昵称')),
                ('avatar_url', models.URLField(blank=True, verbose_name='QQ头像')),
                ('gender', models.CharField(blank=True, max_length=10, verbose_name='性别')),
                ('province', models.CharField(blank=True, max_length=50, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='城市')),
                ('year', models.CharField(blank=True, max_length=4, verbose_name='出生年份')),
                ('is_vip', models.BooleanField(default=False, verbose_name='是否VIP')),
                ('vip_level', models.IntegerField(default=0, verbose_name='VIP等级')),
                ('is_yellow_vip', models.BooleanField(default=False, verbose_name='是否黄钻')),
                ('yellow_vip_level', models.IntegerField(default=0, verbose_name='黄钻等级')),
                ('is_yellow_year_vip', models.BooleanField(default=False, verbose_name='是否年费黄钻')),
                ('social_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qq_info', to='social_accounts.socialaccount', verbose_name='社交账号')),
            ],
            options={
                'verbose_name': 'QQ用户信息',
                'verbose_name_plural': 'QQ用户信息',
                'db_table': 'social_accounts_qq_user_info',
            },
        ),
        migrations.CreateModel(
            name='SocialAuthBinding',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('wechat', '微信'), ('qq', 'QQ'), ('wechat_open', '微信开放平台'), ('wechat_union', '微信开放平台UnionID'), ('alipay', '支付宝'), ('weibo', '微博'), ('github', 'GitHub'), ('google', 'Google')], db_index=True, max_length=50, verbose_name='社交平台')),
                ('social_uid', models.CharField(db_index=True, max_length=255, verbose_name='社交平台用户ID')),
                ('social_nickname', models.CharField(blank=True, max_length=100, verbose_name='社交昵称')),
                ('confirmation_token', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='确认令牌')),
                ('confirmation_code', models.CharField(blank=True, max_length=6, verbose_name='确认码')),
                ('status', models.CharField(choices=[('pending', '待确认'), ('confirmed', '已确认'), ('cancelled', '已取消'), ('expired', '已过期')], db_index=True, default='pending', max_length=20, verbose_name='状态')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='确认时间')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='过期时间')),
                ('bind_context', models.JSONField(blank=True, default=dict, verbose_name='绑定上下文')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_bindings', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '社交账号绑定',
                'verbose_name_plural': '社交账号绑定',
                'db_table': 'social_accounts_social_auth_binding',
            },
        ),
        migrations.CreateModel(
            name='SocialLoginAttempt',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('wechat', '微信'), ('qq', 'QQ'), ('wechat_open', '微信开放平台'), ('wechat_union', '微信开放平台UnionID'), ('alipay', '支付宝'), ('weibo', '微博'), ('github', 'GitHub'), ('google', 'Google')], db_index=True, max_length=50, verbose_name='社交平台')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('status', models.CharField(choices=[('success', '成功'), ('failed', '失败'), ('pending', '进行中'), ('cancelled', '已取消')], db_index=True, default='pending', max_length=20, verbose_name='登录状态')),
                ('error_code', models.CharField(blank=True, max_length=50, verbose_name='错误代码')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('social_info', models.JSONField(blank=True, default=dict, verbose_name='社交账号信息')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_login_attempts', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '社交登录尝试',
                'verbose_name_plural': '社交登录尝试',
                'db_table': 'social_accounts_social_login_attempt',
            },
        ),
        migrations.CreateModel(
            name='SocialUserRegistration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('selected_user_type', models.CharField(choices=[('client', '客户'), ('freelancer', '自由职业者')], db_index=True, default='client', max_length=20, verbose_name='选择用户类型')),
                ('registration_status', models.CharField(choices=[('social_login', '社交登录完成'), ('profile_incomplete', '资料不完整'), ('phone_required', '需要手机验证'), ('email_required', '需要邮箱验证'), ('completed', '注册完成'), ('suspended', '已暂停')], db_index=True, default='social_login', max_length=20, verbose_name='注册状态')),
                ('email_collected', models.BooleanField(default=False, verbose_name='邮箱已收集')),
                ('phone_collected', models.BooleanField(default=False, verbose_name='手机已收集')),
                ('nickname_collected', models.BooleanField(default=False, verbose_name='昵称已收集')),
                ('provided_email', models.EmailField(blank=True, max_length=254, verbose_name='提供的邮箱')),
                ('provided_phone', models.CharField(blank=True, max_length=11, verbose_name='提供的手机')),
                ('current_step', models.IntegerField(db_index=True, default=1, verbose_name='当前步骤')),
                ('total_steps', models.IntegerField(default=4, verbose_name='总步骤')),
                ('registration_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='注册完成时间')),
                ('social_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registration_info', to='social_accounts.socialaccount', verbose_name='社交账号')),
            ],
            options={
                'verbose_name': '社交用户注册',
                'verbose_name_plural': '社交用户注册',
                'db_table': 'social_accounts_social_user_registration',
            },
        ),
        migrations.CreateModel(
            name='WeChatUserInfo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=100, verbose_name='微信昵称')),
                ('avatar_url', models.URLField(blank=True, verbose_name='微信头像')),
                ('gender', models.IntegerField(blank=True, choices=[(1, '男'), (2, '女')], null=True, verbose_name='性别')),
                ('language', models.CharField(blank=True, max_length=20, verbose_name='语言')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=50, verbose_name='省份')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='国家')),
                ('privilege', models.JSONField(blank=True, default=list, verbose_name='特权信息')),
                ('subscribe_time', models.DateTimeField(blank=True, null=True, verbose_name='订阅时间')),
                ('subscribe_scene', models.CharField(blank=True, max_length=50, verbose_name='订阅场景')),
                ('qr_scene', models.IntegerField(blank=True, null=True, verbose_name='二维码场景')),
                ('qr_scene_str', models.CharField(blank=True, max_length=64, verbose_name='二维码场景字符串')),
                ('groupid', models.IntegerField(blank=True, null=True, verbose_name='用户分组ID')),
                ('tagid_list', models.JSONField(blank=True, default=list, verbose_name='用户标签列表')),
                ('remark', models.CharField(blank=True, max_length=30, verbose_name='备注名')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='纬度')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='经度')),
                ('location_precision', models.FloatField(blank=True, null=True, verbose_name='位置精度')),
                ('social_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wechat_info', to='social_accounts.socialaccount', verbose_name='社交账号')),
            ],
            options={
                'verbose_name': '微信用户信息',
                'verbose_name_plural': '微信用户信息',
                'db_table': 'social_accounts_wechat_user_info',
            },
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['user', 'provider'], name='social_acco_user_id_ad72bc_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['provider', 'is_active'], name='social_acco_provide_597dfc_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['unionid'], name='social_acco_unionid_b26342_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['last_login_at'], name='social_acco_last_lo_7717d9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialaccount',
            unique_together={('provider', 'openid'), ('provider', 'uid')},
        ),
        migrations.AddIndex(
            model_name='qquserinfo',
            index=models.Index(fields=['province', 'city'], name='social_acco_provinc_23a394_idx'),
        ),
        migrations.AddIndex(
            model_name='qquserinfo',
            index=models.Index(fields=['is_vip', 'vip_level'], name='social_acco_is_vip_9d2351_idx'),
        ),
        migrations.AddIndex(
            model_name='qquserinfo',
            index=models.Index(fields=['is_yellow_vip', 'yellow_vip_level'], name='social_acco_is_yell_523aef_idx'),
        ),
        migrations.AddIndex(
            model_name='socialauthbinding',
            index=models.Index(fields=['confirmation_token'], name='social_acco_confirm_e724db_idx'),
        ),
        migrations.AddIndex(
            model_name='socialauthbinding',
            index=models.Index(fields=['status', 'expires_at'], name='social_acco_status_318e24_idx'),
        ),
        migrations.AddIndex(
            model_name='socialauthbinding',
            index=models.Index(fields=['created_at'], name='social_acco_created_29d2a0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialauthbinding',
            unique_together={('user', 'provider', 'social_uid')},
        ),
        migrations.AddIndex(
            model_name='socialloginattempt',
            index=models.Index(fields=['provider', 'status'], name='social_acco_provide_0cf70a_idx'),
        ),
        migrations.AddIndex(
            model_name='socialloginattempt',
            index=models.Index(fields=['user', 'created_at'], name='social_acco_user_id_17c526_idx'),
        ),
        migrations.AddIndex(
            model_name='socialloginattempt',
            index=models.Index(fields=['ip_address', 'status'], name='social_acco_ip_addr_f27185_idx'),
        ),
        migrations.AddIndex(
            model_name='socialloginattempt',
            index=models.Index(fields=['started_at'], name='social_acco_started_180e4e_idx'),
        ),
        migrations.AddIndex(
            model_name='socialuserregistration',
            index=models.Index(fields=['registration_status', 'current_step'], name='social_acco_registr_e46199_idx'),
        ),
        migrations.AddIndex(
            model_name='socialuserregistration',
            index=models.Index(fields=['selected_user_type'], name='social_acco_selecte_d865be_idx'),
        ),
        migrations.AddIndex(
            model_name='socialuserregistration',
            index=models.Index(fields=['registration_completed_at'], name='social_acco_registr_002f6d_idx'),
        ),
        migrations.AddIndex(
            model_name='wechatuserinfo',
            index=models.Index(fields=['city', 'province'], name='social_acco_city_984e12_idx'),
        ),
        migrations.AddIndex(
            model_name='wechatuserinfo',
            index=models.Index(fields=['subscribe_time'], name='social_acco_subscri_e72a0b_idx'),
        ),
        migrations.AddIndex(
            model_name='wechatuserinfo',
            index=models.Index(fields=['groupid'], name='social_acco_groupid_3d5b98_idx'),
        ),
    ]

# Generated by Django 5.2.7 on 2025-10-29 10:27

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='gigs.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'gigs_category',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Gig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], db_index=True, default='draft', max_length=20)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('is_premium', models.BooleanField(db_index=True, default=False)),
                ('tags', models.TextField(help_text='Comma-separated tags for search')),
                ('searchable_text', models.TextField(db_index=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='gigs/thumbnails/')),
                ('gallery_images', models.JSONField(blank=True, default=list)),
                ('view_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('order_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('favorite_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gigs', to='gigs.category')),
                ('freelancer', models.ForeignKey(limit_choices_to={'user_type': 'freelancer'}, on_delete=django.db.models.deletion.CASCADE, related_name='gigs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gigs_gig',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GigExtra',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_days', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='gigs.gig')),
            ],
            options={
                'db_table': 'gigs_gig_extra',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='GigFAQ',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='gigs.gig')),
            ],
            options={
                'db_table': 'gigs_gig_faq',
                'ordering': ['sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='GigFavorite',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='gigs.gig')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_gigs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gigs_gig_favorite',
            },
        ),
        migrations.CreateModel(
            name='GigPackage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('package_type', models.CharField(choices=[('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium')], db_index=True, max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_days', models.PositiveIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('revisions', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('features', models.JSONField(blank=True, default=list)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='gigs.gig')),
            ],
            options={
                'db_table': 'gigs_gig_package',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='GigReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('spam', 'Spam or misleading content'), ('inappropriate', 'Inappropriate content'), ('copyright', 'Copyright violation'), ('fraud', 'Fraud or scam'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], db_index=True, default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='gigs.gig')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_gigs', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_gig_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gigs_gig_report',
            },
        ),
        migrations.CreateModel(
            name='GigRequirement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requirement_text', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
                ('input_type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Textarea'), ('file', 'File'), ('checkbox', 'Checkbox'), ('number', 'Number')], default='text', max_length=20)),
                ('options', models.JSONField(blank=True, default=list)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='gigs.gig')),
            ],
            options={
                'db_table': 'gigs_gig_requirement',
                'ordering': ['sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='GigSearchHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(db_index=True, max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gigs_gig_search_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GigStat',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('orders', models.PositiveIntegerField(default=0)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='gigs.gig')),
            ],
            options={
                'db_table': 'gigs_gig_stat',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GigView',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('gig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='gigs.gig')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gigs_gig_view',
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='gigs_catego_name_59b6ab_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'is_active'], name='gigs_catego_parent__8e1b8c_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['freelancer', 'status'], name='gigs_gig_freelan_7e04f8_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['category', 'status'], name='gigs_gig_categor_c05672_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['status', 'is_featured'], name='gigs_gig_status_5d97d6_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['average_rating', 'review_count'], name='gigs_gig_average_f48af2_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['view_count'], name='gigs_gig_view_co_6dacf1_idx'),
        ),
        migrations.AddIndex(
            model_name='gig',
            index=models.Index(fields=['order_count'], name='gigs_gig_order_c_52fcba_idx'),
        ),
        migrations.AddIndex(
            model_name='gigextra',
            index=models.Index(fields=['gig', 'price'], name='gigs_gig_ex_gig_id_2f16f8_idx'),
        ),
        migrations.AddIndex(
            model_name='gigfaq',
            index=models.Index(fields=['gig', 'sort_order'], name='gigs_gig_fa_gig_id_15e742_idx'),
        ),
        migrations.AddIndex(
            model_name='gigfavorite',
            index=models.Index(fields=['user'], name='gigs_gig_fa_user_id_2f0f89_idx'),
        ),
        migrations.AddIndex(
            model_name='gigfavorite',
            index=models.Index(fields=['gig'], name='gigs_gig_fa_gig_id_d39ff6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gigfavorite',
            unique_together={('user', 'gig')},
        ),
        migrations.AddIndex(
            model_name='gigpackage',
            index=models.Index(fields=['gig', 'package_type'], name='gigs_gig_pa_gig_id_53b8c3_idx'),
        ),
        migrations.AddIndex(
            model_name='gigpackage',
            index=models.Index(fields=['price'], name='gigs_gig_pa_price_ef23b7_idx'),
        ),
        migrations.AddIndex(
            model_name='gigpackage',
            index=models.Index(fields=['delivery_days'], name='gigs_gig_pa_deliver_7cc451_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gigpackage',
            unique_together={('gig', 'package_type')},
        ),
        migrations.AddIndex(
            model_name='gigreport',
            index=models.Index(fields=['gig', 'status'], name='gigs_gig_re_gig_id_0f3328_idx'),
        ),
        migrations.AddIndex(
            model_name='gigreport',
            index=models.Index(fields=['reporter'], name='gigs_gig_re_reporte_7d5b95_idx'),
        ),
        migrations.AddIndex(
            model_name='gigreport',
            index=models.Index(fields=['status', 'created_at'], name='gigs_gig_re_status_68e41c_idx'),
        ),
        migrations.AddIndex(
            model_name='gigrequirement',
            index=models.Index(fields=['gig', 'sort_order'], name='gigs_gig_re_gig_id_94e44b_idx'),
        ),
        migrations.AddIndex(
            model_name='gigsearchhistory',
            index=models.Index(fields=['query'], name='gigs_gig_se_query_cc7222_idx'),
        ),
        migrations.AddIndex(
            model_name='gigsearchhistory',
            index=models.Index(fields=['user'], name='gigs_gig_se_user_id_a3c452_idx'),
        ),
        migrations.AddIndex(
            model_name='gigsearchhistory',
            index=models.Index(fields=['created_at'], name='gigs_gig_se_created_a582e5_idx'),
        ),
        migrations.AddIndex(
            model_name='gigstat',
            index=models.Index(fields=['gig', 'date'], name='gigs_gig_st_gig_id_f8fd60_idx'),
        ),
        migrations.AddIndex(
            model_name='gigstat',
            index=models.Index(fields=['date'], name='gigs_gig_st_date_f8021d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gigstat',
            unique_together={('gig', 'date')},
        ),
        migrations.AddIndex(
            model_name='gigview',
            index=models.Index(fields=['gig', 'created_at'], name='gigs_gig_vi_gig_id_094230_idx'),
        ),
        migrations.AddIndex(
            model_name='gigview',
            index=models.Index(fields=['user'], name='gigs_gig_vi_user_id_58d655_idx'),
        ),
        migrations.AddIndex(
            model_name='gigview',
            index=models.Index(fields=['ip_address'], name='gigs_gig_vi_ip_addr_c125a9_idx'),
        ),
    ]

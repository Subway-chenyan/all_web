# Generated by Django 5.2.7 on 2025-10-29 10:27

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method_type', models.CharField(choices=[('alipay', 'Alipay'), ('wechat', 'WeChat Pay'), ('bank_card', 'Bank Card'), ('credit_card', 'Credit Card')], max_length=20)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('account_number', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(db_index=True, default=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('encrypted_data', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments_payment_method',
            },
        ),
        migrations.CreateModel(
            name='PaymentStat',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('successful_transactions', models.PositiveIntegerField(default=0)),
                ('failed_transactions', models.PositiveIntegerField(default=0)),
                ('total_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('successful_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('failed_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('platform_fees', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('withdrawal_fees', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('alipay_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('wechat_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('wallet_volume', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
            options={
                'db_table': 'payments_payment_stat',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='payments_pa_date_a70a94_idx')],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='PayoutBatch',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('total_withdrawals', models.PositiveIntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fees', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('provider', models.CharField(choices=[('alipay', 'Alipay'), ('wechat', 'WeChat Pay'), ('bank_transfer', 'Bank Transfer')], db_index=True, max_length=20)),
                ('provider_batch_id', models.CharField(blank=True, max_length=100)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payments_payout_batch',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['batch_id'], name='payments_pa_batch_i_588a23_idx'), models.Index(fields=['status'], name='payments_pa_status_0c5d48_idx'), models.Index(fields=['provider'], name='payments_pa_provide_45fbf3_idx'), models.Index(fields=['processed_at'], name='payments_pa_process_5b47fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('payment', 'Payment'), ('refund', 'Refund'), ('payout', 'Payout'), ('fee', 'Platform Fee'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], db_index=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], db_index=True, default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='CNY', max_length=3)),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('provider', models.CharField(choices=[('alipay', 'Alipay'), ('wechat', 'WeChat Pay'), ('unionpay', 'UnionPay'), ('wallet', 'Platform Wallet'), ('stripe', 'Stripe')], db_index=True, max_length=20)),
                ('provider_transaction_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='orders.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentmethod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments_transaction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('reason', models.CharField(choices=[('cancellation', 'Order Cancellation'), ('dispute', 'Dispute Resolution'), ('error', 'Payment Error'), ('fraud', 'Fraud'), ('goodwill', 'Goodwill'), ('other', 'Other')], db_index=True, max_length=50)),
                ('reason_description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to=settings.AUTH_USER_MODEL)),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.transaction')),
                ('refund_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_refunds', to='payments.transaction')),
            ],
            options={
                'db_table': 'payments_payment_refund',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Escrow',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('freelancer_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('funded', 'Funded'), ('released', 'Released'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], db_index=True, default='pending', max_length=20)),
                ('funded_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('auto_release_date', models.DateTimeField(blank=True, null=True)),
                ('is_manual_release_required', models.BooleanField(db_index=True, default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_as_client', to=settings.AUTH_USER_MODEL)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_as_freelancer', to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow', to='orders.order')),
                ('funding_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funded_escrows', to='payments.transaction')),
                ('release_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='released_escrows', to='payments.transaction')),
            ],
            options={
                'db_table': 'payments_escrow',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(db_index=True, decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('frozen_balance', models.DecimalField(db_index=True, decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('withdrawal_method', models.CharField(choices=[('alipay', 'Alipay'), ('wechat', 'WeChat Pay'), ('bank_transfer', 'Bank Transfer')], default='alipay', max_length=20)),
                ('withdrawal_account', models.CharField(blank=True, max_length=100)),
                ('withdrawal_account_name', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments_wallet',
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('withdrawal_method', models.CharField(choices=[('alipay', 'Alipay'), ('wechat', 'WeChat Pay'), ('bank_transfer', 'Bank Transfer')], db_index=True, max_length=20)),
                ('withdrawal_account', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('provider_reference', models.CharField(blank=True, max_length=100)),
                ('admin_notes', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_withdrawals', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='withdrawals', to='payments.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payments_withdrawal',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user', 'is_default'], name='payments_pa_user_id_b4c4da_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user', 'is_active'], name='payments_pa_user_id_e03dcf_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['method_type'], name='payments_pa_method__656c5b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='payments_tr_transac_e96a4f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'transaction_type'], name='payments_tr_user_id_fc15ea_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'status'], name='payments_tr_user_id_b99a80_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'created_at'], name='payments_tr_status_e3597b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['provider'], name='payments_tr_provide_505ef3_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['provider_transaction_id'], name='payments_tr_provide_6747d2_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['order'], name='payments_tr_order_i_77e900_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['amount'], name='payments_tr_amount_9e366e_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['processed_at'], name='payments_tr_process_88dc5c_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['completed_at'], name='payments_tr_complet_026fdb_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['original_transaction'], name='payments_pa_origina_4f16c0_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['refund_transaction'], name='payments_pa_refund__b2437d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['user', 'status'], name='payments_pa_user_id_b3bb79_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['order'], name='payments_pa_order_i_ae2cdb_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['reason'], name='payments_pa_reason_e52826_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_43de23_idx'),
        ),
        migrations.AddIndex(
            model_name='escrow',
            index=models.Index(fields=['order'], name='payments_es_order_i_cc185a_idx'),
        ),
        migrations.AddIndex(
            model_name='escrow',
            index=models.Index(fields=['client', 'status'], name='payments_es_client__61b330_idx'),
        ),
        migrations.AddIndex(
            model_name='escrow',
            index=models.Index(fields=['freelancer', 'status'], name='payments_es_freelan_fbcc07_idx'),
        ),
        migrations.AddIndex(
            model_name='escrow',
            index=models.Index(fields=['status', 'funded_at'], name='payments_es_status_421d79_idx'),
        ),
        migrations.AddIndex(
            model_name='escrow',
            index=models.Index(fields=['auto_release_date'], name='payments_es_auto_re_bac248_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['user'], name='payments_wa_user_id_cd1a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['balance'], name='payments_wa_balance_faa9d9_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['frozen_balance'], name='payments_wa_frozen__aa35c3_idx'),
        ),
        migrations.AddIndex(
            model_name='withdrawal',
            index=models.Index(fields=['user', 'status'], name='payments_wi_user_id_8ab084_idx'),
        ),
        migrations.AddIndex(
            model_name='withdrawal',
            index=models.Index(fields=['status', 'created_at'], name='payments_wi_status_eb5158_idx'),
        ),
        migrations.AddIndex(
            model_name='withdrawal',
            index=models.Index(fields=['withdrawal_method'], name='payments_wi_withdra_17536b_idx'),
        ),
        migrations.AddIndex(
            model_name='withdrawal',
            index=models.Index(fields=['amount'], name='payments_wi_amount_3c0751_idx'),
        ),
    ]
